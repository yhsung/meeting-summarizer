// Mocks generated by Mockito 5.4.6 from annotations
// in meeting_summarizer/test/mocks/mock_services.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i22;
import 'dart:io' as _i23;
import 'dart:typed_data' as _i44;
import 'dart:ui' as _i51;

import 'package:flutter/foundation.dart' as _i17;
import 'package:flutter/material.dart' as _i16;
import 'package:meeting_summarizer/core/database/database_helper.dart' as _i4;
import 'package:meeting_summarizer/core/enums/batch_operation.dart' as _i55;
import 'package:meeting_summarizer/core/enums/export_format.dart' as _i49;
import 'package:meeting_summarizer/core/enums/transcription_language.dart'
    as _i25;
import 'package:meeting_summarizer/core/interfaces/batch_processing_interface.dart'
    as _i20;
import 'package:meeting_summarizer/core/interfaces/cloud_sync_interface.dart'
    as _i6;
import 'package:meeting_summarizer/core/interfaces/export_service_interface.dart'
    as _i15;
import 'package:meeting_summarizer/core/models/batch/batch_config.dart' as _i53;
import 'package:meeting_summarizer/core/models/batch/batch_progress.dart'
    as _i54;
import 'package:meeting_summarizer/core/models/batch/batch_result.dart' as _i19;
import 'package:meeting_summarizer/core/models/cloud_sync/cloud_provider.dart'
    as _i37;
import 'package:meeting_summarizer/core/models/cloud_sync/file_change.dart'
    as _i38;
import 'package:meeting_summarizer/core/models/cloud_sync/sync_conflict.dart'
    as _i36;
import 'package:meeting_summarizer/core/models/cloud_sync/sync_operation.dart'
    as _i5;
import 'package:meeting_summarizer/core/models/cloud_sync/sync_status.dart'
    as _i35;
import 'package:meeting_summarizer/core/models/database/app_settings.dart'
    as _i33;
import 'package:meeting_summarizer/core/models/database/recording.dart' as _i30;
import 'package:meeting_summarizer/core/models/database/summary.dart' as _i32;
import 'package:meeting_summarizer/core/models/database/transcription.dart'
    as _i31;
import 'package:meeting_summarizer/core/models/export/export_options.dart'
    as _i47;
import 'package:meeting_summarizer/core/models/export/export_result.dart'
    as _i14;
import 'package:meeting_summarizer/core/models/storage/file_category.dart'
    as _i48;
import 'package:meeting_summarizer/core/models/summarization_configuration.dart'
    as _i42;
import 'package:meeting_summarizer/core/models/summarization_result.dart'
    as _i11;
import 'package:meeting_summarizer/core/models/transcription_request.dart'
    as _i24;
import 'package:meeting_summarizer/core/models/transcription_result.dart'
    as _i2;
import 'package:meeting_summarizer/core/models/transcription_usage_stats.dart'
    as _i3;
import 'package:meeting_summarizer/core/services/advanced_search_service.dart'
    as _i18;
import 'package:meeting_summarizer/core/services/ai_provider_factory.dart'
    as _i41;
import 'package:meeting_summarizer/core/services/ai_summarization_service.dart'
    as _i40;
import 'package:meeting_summarizer/core/services/ai_summarization_service_interface.dart'
    as _i10;
import 'package:meeting_summarizer/core/services/audio_enhancement_service.dart'
    as _i43;
import 'package:meeting_summarizer/core/services/audio_enhancement_service_interface.dart'
    as _i12;
import 'package:meeting_summarizer/core/services/batch_processing_service.dart'
    as _i52;
import 'package:meeting_summarizer/core/services/cloud_sync_service.dart'
    as _i34;
import 'package:meeting_summarizer/core/services/delta_sync_service.dart'
    as _i39;
import 'package:meeting_summarizer/core/services/encrypted_database_service.dart'
    as _i29;
import 'package:meeting_summarizer/core/services/export_service.dart' as _i46;
import 'package:meeting_summarizer/core/services/google_speech_service.dart'
    as _i21;
import 'package:meeting_summarizer/core/services/incremental_transfer_manager.dart'
    as _i7;
import 'package:meeting_summarizer/core/services/local_whisper_service.dart'
    as _i27;
import 'package:meeting_summarizer/core/services/offline_queue_service.dart'
    as _i8;
import 'package:meeting_summarizer/core/services/openai_whisper_service.dart'
    as _i26;
import 'package:meeting_summarizer/core/services/permission_service.dart'
    as _i45;
import 'package:meeting_summarizer/core/services/permission_service_interface.dart'
    as _i13;
import 'package:meeting_summarizer/core/services/platform_services/android_auto_service.dart'
    as _i58;
import 'package:meeting_summarizer/core/services/platform_services/enhanced_notifications_service.dart'
    as _i56;
import 'package:meeting_summarizer/core/services/platform_services/performance_optimization_service.dart'
    as _i59;
import 'package:meeting_summarizer/core/services/platform_services/siri_shortcuts_service.dart'
    as _i57;
import 'package:meeting_summarizer/core/services/retry_manager.dart' as _i9;
import 'package:meeting_summarizer/core/services/theme_service.dart' as _i50;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i28;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTranscriptionResult_0 extends _i1.SmartFake
    implements _i2.TranscriptionResult {
  _FakeTranscriptionResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTranscriptionUsageStats_1 extends _i1.SmartFake
    implements _i3.TranscriptionUsageStats {
  _FakeTranscriptionUsageStats_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseHelper_2 extends _i1.SmartFake
    implements _i4.DatabaseHelper {
  _FakeDatabaseHelper_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSyncOperation_3 extends _i1.SmartFake implements _i5.SyncOperation {
  _FakeSyncOperation_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCloudStorageQuota_4 extends _i1.SmartFake
    implements _i6.CloudStorageQuota {
  _FakeCloudStorageQuota_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_5 extends _i1.SmartFake implements Duration {
  _FakeDuration_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransferResult_6 extends _i1.SmartFake
    implements _i7.TransferResult {
  _FakeTransferResult_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransferStats_7 extends _i1.SmartFake implements _i7.TransferStats {
  _FakeTransferStats_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueueStatistics_8 extends _i1.SmartFake
    implements _i8.QueueStatistics {
  _FakeQueueStatistics_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePriorityStatistics_9 extends _i1.SmartFake
    implements _i8.PriorityStatistics {
  _FakePriorityStatistics_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRetryStatistics_10 extends _i1.SmartFake
    implements _i9.RetryStatistics {
  _FakeRetryStatistics_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeServiceCapabilities_11 extends _i1.SmartFake
    implements _i10.ServiceCapabilities {
  _FakeServiceCapabilities_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSummarizationResult_12 extends _i1.SmartFake
    implements _i11.SummarizationResult {
  _FakeSummarizationResult_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfigurationValidationResult_13 extends _i1.SmartFake
    implements _i10.ConfigurationValidationResult {
  _FakeConfigurationValidationResult_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeServiceHealthStatus_14 extends _i1.SmartFake
    implements _i10.ServiceHealthStatus {
  _FakeServiceHealthStatus_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAudioEnhancementConfig_15 extends _i1.SmartFake
    implements _i12.AudioEnhancementConfig {
  _FakeAudioEnhancementConfig_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAudioEnhancementResult_16 extends _i1.SmartFake
    implements _i12.AudioEnhancementResult {
  _FakeAudioEnhancementResult_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePermissionResult_17 extends _i1.SmartFake
    implements _i13.PermissionResult {
  _FakePermissionResult_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExportResult_18 extends _i1.SmartFake implements _i14.ExportResult {
  _FakeExportResult_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExportEstimate_19 extends _i1.SmartFake
    implements _i15.ExportEstimate {
  _FakeExportEstimate_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeValidationResult_20 extends _i1.SmartFake
    implements _i15.ValidationResult {
  _FakeValidationResult_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeThemeData_21 extends _i1.SmartFake implements _i16.ThemeData {
  _FakeThemeData_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({
    _i17.DiagnosticLevel? minLevel = _i17.DiagnosticLevel.info,
  }) => super.toString();
}

class _FakeSearchResult_22 extends _i1.SmartFake implements _i18.SearchResult {
  _FakeSearchResult_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSearchFacets_23 extends _i1.SmartFake implements _i18.SearchFacets {
  _FakeSearchFacets_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBatchResult_24 extends _i1.SmartFake implements _i19.BatchResult {
  _FakeBatchResult_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBatchStatistics_25 extends _i1.SmartFake
    implements _i20.BatchStatistics {
  _FakeBatchStatistics_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GoogleSpeechService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSpeechService extends _i1.Mock
    implements _i21.GoogleSpeechService {
  MockGoogleSpeechService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> initializeWithCredentials({
    String? apiKey,
    String? serviceAccountPath,
    dynamic Function(double, String)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#initializeWithCredentials, [], {
              #apiKey: apiKey,
              #serviceAccountPath: serviceAccountPath,
              #onProgress: onProgress,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> isServiceAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isServiceAvailable, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<_i2.TranscriptionResult> transcribeAudioFile(
    _i23.File? audioFile,
    _i24.TranscriptionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transcribeAudioFile, [audioFile, request]),
            returnValue: _i22.Future<_i2.TranscriptionResult>.value(
              _FakeTranscriptionResult_0(
                this,
                Invocation.method(#transcribeAudioFile, [audioFile, request]),
              ),
            ),
          )
          as _i22.Future<_i2.TranscriptionResult>);

  @override
  _i22.Future<_i2.TranscriptionResult> transcribeAudioBytes(
    List<int>? audioBytes,
    _i24.TranscriptionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transcribeAudioBytes, [audioBytes, request]),
            returnValue: _i22.Future<_i2.TranscriptionResult>.value(
              _FakeTranscriptionResult_0(
                this,
                Invocation.method(#transcribeAudioBytes, [audioBytes, request]),
              ),
            ),
          )
          as _i22.Future<_i2.TranscriptionResult>);

  @override
  _i22.Future<List<_i25.TranscriptionLanguage>> getSupportedLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedLanguages, []),
            returnValue: _i22.Future<List<_i25.TranscriptionLanguage>>.value(
              <_i25.TranscriptionLanguage>[],
            ),
          )
          as _i22.Future<List<_i25.TranscriptionLanguage>>);

  @override
  _i22.Future<_i25.TranscriptionLanguage?> detectLanguage(
    _i23.File? audioFile,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#detectLanguage, [audioFile]),
            returnValue: _i22.Future<_i25.TranscriptionLanguage?>.value(),
          )
          as _i22.Future<_i25.TranscriptionLanguage?>);

  @override
  _i22.Future<_i3.TranscriptionUsageStats> getUsageStats() =>
      (super.noSuchMethod(
            Invocation.method(#getUsageStats, []),
            returnValue: _i22.Future<_i3.TranscriptionUsageStats>.value(
              _FakeTranscriptionUsageStats_1(
                this,
                Invocation.method(#getUsageStats, []),
              ),
            ),
          )
          as _i22.Future<_i3.TranscriptionUsageStats>);

  @override
  _i22.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<Map<String, dynamic>> getInitializationStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getInitializationStatus, []),
            returnValue: _i22.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i22.Future<Map<String, dynamic>>);
}

/// A class which mocks [OpenAIWhisperService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAIWhisperService extends _i1.Mock
    implements _i26.OpenAIWhisperService {
  MockOpenAIWhisperService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> isServiceAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isServiceAvailable, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<_i2.TranscriptionResult> transcribeAudioFile(
    _i23.File? audioFile,
    _i24.TranscriptionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transcribeAudioFile, [audioFile, request]),
            returnValue: _i22.Future<_i2.TranscriptionResult>.value(
              _FakeTranscriptionResult_0(
                this,
                Invocation.method(#transcribeAudioFile, [audioFile, request]),
              ),
            ),
          )
          as _i22.Future<_i2.TranscriptionResult>);

  @override
  _i22.Future<_i2.TranscriptionResult> transcribeAudioBytes(
    List<int>? audioBytes,
    _i24.TranscriptionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transcribeAudioBytes, [audioBytes, request]),
            returnValue: _i22.Future<_i2.TranscriptionResult>.value(
              _FakeTranscriptionResult_0(
                this,
                Invocation.method(#transcribeAudioBytes, [audioBytes, request]),
              ),
            ),
          )
          as _i22.Future<_i2.TranscriptionResult>);

  @override
  _i22.Future<List<_i25.TranscriptionLanguage>> getSupportedLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedLanguages, []),
            returnValue: _i22.Future<List<_i25.TranscriptionLanguage>>.value(
              <_i25.TranscriptionLanguage>[],
            ),
          )
          as _i22.Future<List<_i25.TranscriptionLanguage>>);

  @override
  _i22.Future<_i25.TranscriptionLanguage?> detectLanguage(
    _i23.File? audioFile,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#detectLanguage, [audioFile]),
            returnValue: _i22.Future<_i25.TranscriptionLanguage?>.value(),
          )
          as _i22.Future<_i25.TranscriptionLanguage?>);

  @override
  _i22.Future<_i3.TranscriptionUsageStats> getUsageStats() =>
      (super.noSuchMethod(
            Invocation.method(#getUsageStats, []),
            returnValue: _i22.Future<_i3.TranscriptionUsageStats>.value(
              _FakeTranscriptionUsageStats_1(
                this,
                Invocation.method(#getUsageStats, []),
              ),
            ),
          )
          as _i22.Future<_i3.TranscriptionUsageStats>);

  @override
  _i22.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);
}

/// A class which mocks [LocalWhisperService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalWhisperService extends _i1.Mock
    implements _i27.LocalWhisperService {
  MockLocalWhisperService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<void> initialize({
    dynamic Function(double, String)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#initialize, [], {#onProgress: onProgress}),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> isServiceAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isServiceAvailable, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<_i2.TranscriptionResult> transcribeAudioFile(
    _i23.File? audioFile,
    _i24.TranscriptionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transcribeAudioFile, [audioFile, request]),
            returnValue: _i22.Future<_i2.TranscriptionResult>.value(
              _FakeTranscriptionResult_0(
                this,
                Invocation.method(#transcribeAudioFile, [audioFile, request]),
              ),
            ),
          )
          as _i22.Future<_i2.TranscriptionResult>);

  @override
  _i22.Future<_i2.TranscriptionResult> transcribeAudioBytes(
    List<int>? audioBytes,
    _i24.TranscriptionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transcribeAudioBytes, [audioBytes, request]),
            returnValue: _i22.Future<_i2.TranscriptionResult>.value(
              _FakeTranscriptionResult_0(
                this,
                Invocation.method(#transcribeAudioBytes, [audioBytes, request]),
              ),
            ),
          )
          as _i22.Future<_i2.TranscriptionResult>);

  @override
  _i22.Future<List<_i25.TranscriptionLanguage>> getSupportedLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedLanguages, []),
            returnValue: _i22.Future<List<_i25.TranscriptionLanguage>>.value(
              <_i25.TranscriptionLanguage>[],
            ),
          )
          as _i22.Future<List<_i25.TranscriptionLanguage>>);

  @override
  _i22.Future<_i25.TranscriptionLanguage?> detectLanguage(
    _i23.File? audioFile,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#detectLanguage, [audioFile]),
            returnValue: _i22.Future<_i25.TranscriptionLanguage?>.value(),
          )
          as _i22.Future<_i25.TranscriptionLanguage?>);

  @override
  _i22.Future<_i3.TranscriptionUsageStats> getUsageStats() =>
      (super.noSuchMethod(
            Invocation.method(#getUsageStats, []),
            returnValue: _i22.Future<_i3.TranscriptionUsageStats>.value(
              _FakeTranscriptionUsageStats_1(
                this,
                Invocation.method(#getUsageStats, []),
              ),
            ),
          )
          as _i22.Future<_i3.TranscriptionUsageStats>);

  @override
  _i22.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> downloadModel(
    String? modelName, {
    dynamic Function(
      double, {
      int? downloadedBytes,
      String? status,
      int? totalBytes,
    })?
    onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadModel,
              [modelName],
              {#onProgress: onProgress},
            ),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  List<_i27.LocalWhisperModel> getAvailableModels() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableModels, []),
            returnValue: <_i27.LocalWhisperModel>[],
          )
          as List<_i27.LocalWhisperModel>);

  @override
  String getCurrentModel() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentModel, []),
            returnValue: _i28.dummyValue<String>(
              this,
              Invocation.method(#getCurrentModel, []),
            ),
          )
          as String);

  @override
  _i22.Future<void> setActiveModel(String? modelName) =>
      (super.noSuchMethod(
            Invocation.method(#setActiveModel, [modelName]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);
}

/// A class which mocks [EncryptedDatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEncryptedDatabaseService extends _i1.Mock
    implements _i29.EncryptedDatabaseService {
  MockEncryptedDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.DatabaseHelper get databaseHelper =>
      (super.noSuchMethod(
            Invocation.getter(#databaseHelper),
            returnValue: _FakeDatabaseHelper_2(
              this,
              Invocation.getter(#databaseHelper),
            ),
          )
          as _i4.DatabaseHelper);

  @override
  _i22.Future<String> insertRecording(_i30.Recording? recording) =>
      (super.noSuchMethod(
            Invocation.method(#insertRecording, [recording]),
            returnValue: _i22.Future<String>.value(
              _i28.dummyValue<String>(
                this,
                Invocation.method(#insertRecording, [recording]),
              ),
            ),
          )
          as _i22.Future<String>);

  @override
  _i22.Future<_i30.Recording?> getRecording(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getRecording, [id]),
            returnValue: _i22.Future<_i30.Recording?>.value(),
          )
          as _i22.Future<_i30.Recording?>);

  @override
  _i22.Future<bool> updateRecording(_i30.Recording? recording) =>
      (super.noSuchMethod(
            Invocation.method(#updateRecording, [recording]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<String> insertTranscription(_i31.Transcription? transcription) =>
      (super.noSuchMethod(
            Invocation.method(#insertTranscription, [transcription]),
            returnValue: _i22.Future<String>.value(
              _i28.dummyValue<String>(
                this,
                Invocation.method(#insertTranscription, [transcription]),
              ),
            ),
          )
          as _i22.Future<String>);

  @override
  _i22.Future<_i31.Transcription?> getTranscription(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTranscription, [id]),
            returnValue: _i22.Future<_i31.Transcription?>.value(),
          )
          as _i22.Future<_i31.Transcription?>);

  @override
  _i22.Future<List<_i30.Recording>> getRecordings({
    int? limit,
    int? offset,
    String? searchQuery,
    String? format,
    DateTime? startDate,
    DateTime? endDate,
    String? orderBy = 'created_at DESC',
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordings, [], {
              #limit: limit,
              #offset: offset,
              #searchQuery: searchQuery,
              #format: format,
              #startDate: startDate,
              #endDate: endDate,
              #orderBy: orderBy,
            }),
            returnValue: _i22.Future<List<_i30.Recording>>.value(
              <_i30.Recording>[],
            ),
          )
          as _i22.Future<List<_i30.Recording>>);

  @override
  _i22.Future<bool> deleteRecording(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRecording, [id]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> permanentlyDeleteRecording(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#permanentlyDeleteRecording, [id]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<List<_i31.Transcription>> getTranscriptionsByRecording(
    String? recordingId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTranscriptionsByRecording, [recordingId]),
            returnValue: _i22.Future<List<_i31.Transcription>>.value(
              <_i31.Transcription>[],
            ),
          )
          as _i22.Future<List<_i31.Transcription>>);

  @override
  _i22.Future<bool> updateTranscription(_i31.Transcription? transcription) =>
      (super.noSuchMethod(
            Invocation.method(#updateTranscription, [transcription]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> deleteTranscription(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTranscription, [id]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<String> insertSummary(_i32.Summary? summary) =>
      (super.noSuchMethod(
            Invocation.method(#insertSummary, [summary]),
            returnValue: _i22.Future<String>.value(
              _i28.dummyValue<String>(
                this,
                Invocation.method(#insertSummary, [summary]),
              ),
            ),
          )
          as _i22.Future<String>);

  @override
  _i22.Future<_i32.Summary?> getSummary(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSummary, [id]),
            returnValue: _i22.Future<_i32.Summary?>.value(),
          )
          as _i22.Future<_i32.Summary?>);

  @override
  _i22.Future<List<_i32.Summary>> getSummariesByTranscription(
    String? transcriptionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSummariesByTranscription, [transcriptionId]),
            returnValue: _i22.Future<List<_i32.Summary>>.value(
              <_i32.Summary>[],
            ),
          )
          as _i22.Future<List<_i32.Summary>>);

  @override
  _i22.Future<bool> updateSummary(_i32.Summary? summary) =>
      (super.noSuchMethod(
            Invocation.method(#updateSummary, [summary]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> deleteSummary(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSummary, [id]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<String?> getSetting(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getSetting, [key]),
            returnValue: _i22.Future<String?>.value(),
          )
          as _i22.Future<String?>);

  @override
  _i22.Future<_i33.AppSettings?> getAppSetting(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getAppSetting, [key]),
            returnValue: _i22.Future<_i33.AppSettings?>.value(),
          )
          as _i22.Future<_i33.AppSettings?>);

  @override
  _i22.Future<bool> setSetting(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setSetting, [key, value]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> upsertSetting(_i33.AppSettings? setting) =>
      (super.noSuchMethod(
            Invocation.method(#upsertSetting, [setting]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<Map<String, int>> getDatabaseStats() =>
      (super.noSuchMethod(
            Invocation.method(#getDatabaseStats, []),
            returnValue: _i22.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i22.Future<Map<String, int>>);

  @override
  _i22.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> migrateToEncryption() =>
      (super.noSuchMethod(
            Invocation.method(#migrateToEncryption, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);
}

/// A class which mocks [CloudSyncService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudSyncService extends _i1.Mock implements _i34.CloudSyncService {
  MockCloudSyncService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Stream<_i35.SyncStatus> get syncStatusStream =>
      (super.noSuchMethod(
            Invocation.getter(#syncStatusStream),
            returnValue: _i22.Stream<_i35.SyncStatus>.empty(),
          )
          as _i22.Stream<_i35.SyncStatus>);

  @override
  _i22.Stream<_i5.SyncOperation> get operationStream =>
      (super.noSuchMethod(
            Invocation.getter(#operationStream),
            returnValue: _i22.Stream<_i5.SyncOperation>.empty(),
          )
          as _i22.Stream<_i5.SyncOperation>);

  @override
  _i22.Stream<_i36.SyncConflict> get conflictStream =>
      (super.noSuchMethod(
            Invocation.getter(#conflictStream),
            returnValue: _i22.Stream<_i36.SyncConflict>.empty(),
          )
          as _i22.Stream<_i36.SyncConflict>);

  @override
  _i22.Stream<_i7.TransferProgress> get incrementalSyncProgressStream =>
      (super.noSuchMethod(
            Invocation.getter(#incrementalSyncProgressStream),
            returnValue: _i22.Stream<_i7.TransferProgress>.empty(),
          )
          as _i22.Stream<_i7.TransferProgress>);

  @override
  _i22.Stream<_i7.TransferEvent> get incrementalSyncEventStream =>
      (super.noSuchMethod(
            Invocation.getter(#incrementalSyncEventStream),
            returnValue: _i22.Stream<_i7.TransferEvent>.empty(),
          )
          as _i22.Stream<_i7.TransferEvent>);

  @override
  _i22.Stream<_i8.QueueStatusUpdate> get offlineQueueStatusStream =>
      (super.noSuchMethod(
            Invocation.getter(#offlineQueueStatusStream),
            returnValue: _i22.Stream<_i8.QueueStatusUpdate>.empty(),
          )
          as _i22.Stream<_i8.QueueStatusUpdate>);

  @override
  Map<String, _i9.RetryContext> get activeRetryOperations =>
      (super.noSuchMethod(
            Invocation.getter(#activeRetryOperations),
            returnValue: <String, _i9.RetryContext>{},
          )
          as Map<String, _i9.RetryContext>);

  @override
  _i22.Stream<_i9.RetryStatusUpdate> get retryStatusStream =>
      (super.noSuchMethod(
            Invocation.getter(#retryStatusStream),
            returnValue: _i22.Stream<_i9.RetryStatusUpdate>.empty(),
          )
          as _i22.Stream<_i9.RetryStatusUpdate>);

  @override
  bool get isBackgroundProcessingEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isBackgroundProcessingEnabled),
            returnValue: false,
          )
          as bool);

  @override
  _i22.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<List<_i37.CloudProvider>> getAvailableProviders() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableProviders, []),
            returnValue: _i22.Future<List<_i37.CloudProvider>>.value(
              <_i37.CloudProvider>[],
            ),
          )
          as _i22.Future<List<_i37.CloudProvider>>);

  @override
  _i22.Future<bool> connectProvider(
    _i37.CloudProvider? provider,
    Map<String, String>? credentials,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#connectProvider, [provider, credentials]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<void> disconnectProvider(_i37.CloudProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#disconnectProvider, [provider]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> isProviderConnected(_i37.CloudProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#isProviderConnected, [provider]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<_i5.SyncOperation> uploadFile({
    required String? localFilePath,
    required String? remoteFilePath,
    required _i37.CloudProvider? provider,
    bool? encryptBeforeUpload = true,
    Map<String, dynamic>? metadata = const {},
    int? priority = 0,
    bool? queueIfOffline = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#uploadFile, [], {
              #localFilePath: localFilePath,
              #remoteFilePath: remoteFilePath,
              #provider: provider,
              #encryptBeforeUpload: encryptBeforeUpload,
              #metadata: metadata,
              #priority: priority,
              #queueIfOffline: queueIfOffline,
            }),
            returnValue: _i22.Future<_i5.SyncOperation>.value(
              _FakeSyncOperation_3(
                this,
                Invocation.method(#uploadFile, [], {
                  #localFilePath: localFilePath,
                  #remoteFilePath: remoteFilePath,
                  #provider: provider,
                  #encryptBeforeUpload: encryptBeforeUpload,
                  #metadata: metadata,
                  #priority: priority,
                  #queueIfOffline: queueIfOffline,
                }),
              ),
            ),
          )
          as _i22.Future<_i5.SyncOperation>);

  @override
  _i22.Future<_i5.SyncOperation> downloadFile({
    required String? remoteFilePath,
    required String? localFilePath,
    required _i37.CloudProvider? provider,
    bool? decryptAfterDownload = true,
    int? priority = 0,
    bool? queueIfOffline = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#downloadFile, [], {
              #remoteFilePath: remoteFilePath,
              #localFilePath: localFilePath,
              #provider: provider,
              #decryptAfterDownload: decryptAfterDownload,
              #priority: priority,
              #queueIfOffline: queueIfOffline,
            }),
            returnValue: _i22.Future<_i5.SyncOperation>.value(
              _FakeSyncOperation_3(
                this,
                Invocation.method(#downloadFile, [], {
                  #remoteFilePath: remoteFilePath,
                  #localFilePath: localFilePath,
                  #provider: provider,
                  #decryptAfterDownload: decryptAfterDownload,
                  #priority: priority,
                  #queueIfOffline: queueIfOffline,
                }),
              ),
            ),
          )
          as _i22.Future<_i5.SyncOperation>);

  @override
  _i22.Future<List<_i5.SyncOperation>> syncAll({
    _i37.CloudProvider? provider,
    _i6.SyncDirection? direction = _i6.SyncDirection.bidirectional,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#syncAll, [], {
              #provider: provider,
              #direction: direction,
            }),
            returnValue: _i22.Future<List<_i5.SyncOperation>>.value(
              <_i5.SyncOperation>[],
            ),
          )
          as _i22.Future<List<_i5.SyncOperation>>);

  @override
  _i22.Future<_i35.SyncStatus?> getFileSyncStatus(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#getFileSyncStatus, [filePath]),
            returnValue: _i22.Future<_i35.SyncStatus?>.value(),
          )
          as _i22.Future<_i35.SyncStatus?>);

  @override
  _i22.Future<Map<_i37.CloudProvider, _i35.SyncStatus>> getSyncStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getSyncStatus, []),
            returnValue:
                _i22.Future<Map<_i37.CloudProvider, _i35.SyncStatus>>.value(
                  <_i37.CloudProvider, _i35.SyncStatus>{},
                ),
          )
          as _i22.Future<Map<_i37.CloudProvider, _i35.SyncStatus>>);

  @override
  _i22.Future<bool> resolveConflict(
    _i36.SyncConflict? conflict,
    _i6.ConflictResolution? resolution,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#resolveConflict, [conflict, resolution]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<List<_i36.SyncConflict>> getPendingConflicts() =>
      (super.noSuchMethod(
            Invocation.method(#getPendingConflicts, []),
            returnValue: _i22.Future<List<_i36.SyncConflict>>.value(
              <_i36.SyncConflict>[],
            ),
          )
          as _i22.Future<List<_i36.SyncConflict>>);

  @override
  _i22.Future<void> cancelOperation(String? operationId) =>
      (super.noSuchMethod(
            Invocation.method(#cancelOperation, [operationId]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<List<_i5.SyncOperation>> getSyncHistory({
    _i37.CloudProvider? provider,
    DateTime? since,
    int? limit = 100,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSyncHistory, [], {
              #provider: provider,
              #since: since,
              #limit: limit,
            }),
            returnValue: _i22.Future<List<_i5.SyncOperation>>.value(
              <_i5.SyncOperation>[],
            ),
          )
          as _i22.Future<List<_i5.SyncOperation>>);

  @override
  _i22.Future<List<_i36.SyncConflict>> checkForConflicts({
    _i37.CloudProvider? provider,
    String? filePath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#checkForConflicts, [], {
              #provider: provider,
              #filePath: filePath,
            }),
            returnValue: _i22.Future<List<_i36.SyncConflict>>.value(
              <_i36.SyncConflict>[],
            ),
          )
          as _i22.Future<List<_i36.SyncConflict>>);

  @override
  _i22.Future<_i6.CloudStorageQuota> getStorageQuota(
    _i37.CloudProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getStorageQuota, [provider]),
            returnValue: _i22.Future<_i6.CloudStorageQuota>.value(
              _FakeCloudStorageQuota_4(
                this,
                Invocation.method(#getStorageQuota, [provider]),
              ),
            ),
          )
          as _i22.Future<_i6.CloudStorageQuota>);

  @override
  _i22.Future<void> cleanupCache() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupCache, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> setAutoSyncEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setAutoSyncEnabled, [enabled]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> isAutoSyncEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isAutoSyncEnabled, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<void> setSyncInterval(Duration? interval) =>
      (super.noSuchMethod(
            Invocation.method(#setSyncInterval, [interval]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<Duration> getSyncInterval() =>
      (super.noSuchMethod(
            Invocation.method(#getSyncInterval, []),
            returnValue: _i22.Future<Duration>.value(
              _FakeDuration_5(this, Invocation.method(#getSyncInterval, [])),
            ),
          )
          as _i22.Future<Duration>);

  @override
  _i22.Future<void> pauseSync() =>
      (super.noSuchMethod(
            Invocation.method(#pauseSync, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> resumeSync() =>
      (super.noSuchMethod(
            Invocation.method(#resumeSync, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> isSyncPaused() =>
      (super.noSuchMethod(
            Invocation.method(#isSyncPaused, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<_i7.TransferResult> syncFileIncremental({
    required String? filePath,
    required _i37.CloudProvider? provider,
    _i6.SyncDirection? direction = _i6.SyncDirection.bidirectional,
    bool? forceFullSync = false,
    dynamic Function(_i7.TransferProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#syncFileIncremental, [], {
              #filePath: filePath,
              #provider: provider,
              #direction: direction,
              #forceFullSync: forceFullSync,
              #onProgress: onProgress,
            }),
            returnValue: _i22.Future<_i7.TransferResult>.value(
              _FakeTransferResult_6(
                this,
                Invocation.method(#syncFileIncremental, [], {
                  #filePath: filePath,
                  #provider: provider,
                  #direction: direction,
                  #forceFullSync: forceFullSync,
                  #onProgress: onProgress,
                }),
              ),
            ),
          )
          as _i22.Future<_i7.TransferResult>);

  @override
  _i22.Future<List<_i7.TransferResult>> syncFilesIncremental({
    required List<String>? filePaths,
    required _i37.CloudProvider? provider,
    _i6.SyncDirection? direction = _i6.SyncDirection.bidirectional,
    bool? forceFullSync = false,
    dynamic Function(String, _i7.TransferProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#syncFilesIncremental, [], {
              #filePaths: filePaths,
              #provider: provider,
              #direction: direction,
              #forceFullSync: forceFullSync,
              #onProgress: onProgress,
            }),
            returnValue: _i22.Future<List<_i7.TransferResult>>.value(
              <_i7.TransferResult>[],
            ),
          )
          as _i22.Future<List<_i7.TransferResult>>);

  @override
  _i22.Future<List<_i38.FileChange>> detectDirectoryChanges({
    required String? directoryPath,
    required _i37.CloudProvider? provider,
    List<String>? fileExtensions = const [],
    bool? recursive = true,
    bool? autoSync = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#detectDirectoryChanges, [], {
              #directoryPath: directoryPath,
              #provider: provider,
              #fileExtensions: fileExtensions,
              #recursive: recursive,
              #autoSync: autoSync,
            }),
            returnValue: _i22.Future<List<_i38.FileChange>>.value(
              <_i38.FileChange>[],
            ),
          )
          as _i22.Future<List<_i38.FileChange>>);

  @override
  _i7.TransferStats getIncrementalSyncStats() =>
      (super.noSuchMethod(
            Invocation.method(#getIncrementalSyncStats, []),
            returnValue: _FakeTransferStats_7(
              this,
              Invocation.method(#getIncrementalSyncStats, []),
            ),
          )
          as _i7.TransferStats);

  @override
  void setBandwidthLimit(int? bytesPerSecond) => super.noSuchMethod(
    Invocation.method(#setBandwidthLimit, [bytesPerSecond]),
    returnValueForMissingStub: null,
  );

  @override
  _i22.Future<void> pauseIncrementalSync() =>
      (super.noSuchMethod(
            Invocation.method(#pauseIncrementalSync, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> resumeIncrementalSync() =>
      (super.noSuchMethod(
            Invocation.method(#resumeIncrementalSync, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> uploadFileEncrypted({
    required String? filePath,
    required String? remotePath,
    required _i37.CloudProvider? provider,
    Map<String, dynamic>? metadata,
    dynamic Function(double)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#uploadFileEncrypted, [], {
              #filePath: filePath,
              #remotePath: remotePath,
              #provider: provider,
              #metadata: metadata,
              #onProgress: onProgress,
            }),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> downloadFileDecrypted({
    required String? remotePath,
    required String? localPath,
    required _i37.CloudProvider? provider,
    dynamic Function(double)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#downloadFileDecrypted, [], {
              #remotePath: remotePath,
              #localPath: localPath,
              #provider: provider,
              #onProgress: onProgress,
            }),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<_i7.TransferResult> syncFileIncrementalEncrypted({
    required String? filePath,
    required _i37.CloudProvider? provider,
    _i39.SyncDirection? direction = _i39.SyncDirection.bidirectional,
    bool? forceFullSync = false,
    dynamic Function(_i7.TransferProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#syncFileIncrementalEncrypted, [], {
              #filePath: filePath,
              #provider: provider,
              #direction: direction,
              #forceFullSync: forceFullSync,
              #onProgress: onProgress,
            }),
            returnValue: _i22.Future<_i7.TransferResult>.value(
              _FakeTransferResult_6(
                this,
                Invocation.method(#syncFileIncrementalEncrypted, [], {
                  #filePath: filePath,
                  #provider: provider,
                  #direction: direction,
                  #forceFullSync: forceFullSync,
                  #onProgress: onProgress,
                }),
              ),
            ),
          )
          as _i22.Future<_i7.TransferResult>);

  @override
  _i22.Future<String> createProviderEncryptionKey(
    _i37.CloudProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createProviderEncryptionKey, [provider]),
            returnValue: _i22.Future<String>.value(
              _i28.dummyValue<String>(
                this,
                Invocation.method(#createProviderEncryptionKey, [provider]),
              ),
            ),
          )
          as _i22.Future<String>);

  @override
  _i22.Future<String> createFileEncryptionKey(
    String? filePath,
    _i37.CloudProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createFileEncryptionKey, [filePath, provider]),
            returnValue: _i22.Future<String>.value(
              _i28.dummyValue<String>(
                this,
                Invocation.method(#createFileEncryptionKey, [
                  filePath,
                  provider,
                ]),
              ),
            ),
          )
          as _i22.Future<String>);

  @override
  _i22.Future<bool> isEncryptionAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isEncryptionAvailable, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<List<String>> listEncryptionKeys() =>
      (super.noSuchMethod(
            Invocation.method(#listEncryptionKeys, []),
            returnValue: _i22.Future<List<String>>.value(<String>[]),
          )
          as _i22.Future<List<String>>);

  @override
  _i22.Future<_i8.QueueStatistics> getOfflineQueueStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getOfflineQueueStatistics, []),
            returnValue: _i22.Future<_i8.QueueStatistics>.value(
              _FakeQueueStatistics_8(
                this,
                Invocation.method(#getOfflineQueueStatistics, []),
              ),
            ),
          )
          as _i22.Future<_i8.QueueStatistics>);

  @override
  _i22.Future<_i8.PriorityStatistics> getQueuePriorityStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getQueuePriorityStatistics, []),
            returnValue: _i22.Future<_i8.PriorityStatistics>.value(
              _FakePriorityStatistics_9(
                this,
                Invocation.method(#getQueuePriorityStatistics, []),
              ),
            ),
          )
          as _i22.Future<_i8.PriorityStatistics>);

  @override
  _i22.Future<List<_i8.QueuedOperation>> getPendingQueuedOperations() =>
      (super.noSuchMethod(
            Invocation.method(#getPendingQueuedOperations, []),
            returnValue: _i22.Future<List<_i8.QueuedOperation>>.value(
              <_i8.QueuedOperation>[],
            ),
          )
          as _i22.Future<List<_i8.QueuedOperation>>);

  @override
  _i22.Future<List<_i8.QueuedOperation>> getQueuedOperationsByStatus(
    _i8.QueueOperationStatus? status,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getQueuedOperationsByStatus, [status]),
            returnValue: _i22.Future<List<_i8.QueuedOperation>>.value(
              <_i8.QueuedOperation>[],
            ),
          )
          as _i22.Future<List<_i8.QueuedOperation>>);

  @override
  _i22.Future<bool> retryQueuedOperation(String? operationId) =>
      (super.noSuchMethod(
            Invocation.method(#retryQueuedOperation, [operationId]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> removeQueuedOperation(String? operationId) =>
      (super.noSuchMethod(
            Invocation.method(#removeQueuedOperation, [operationId]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> updateQueuedOperationPriority({
    required String? operationId,
    required int? newPriority,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateQueuedOperationPriority, [], {
              #operationId: operationId,
              #newPriority: newPriority,
            }),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> promoteOperationToHighPriority(String? operationId) =>
      (super.noSuchMethod(
            Invocation.method(#promoteOperationToHighPriority, [operationId]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> demoteOperationToLowPriority(String? operationId) =>
      (super.noSuchMethod(
            Invocation.method(#demoteOperationToLowPriority, [operationId]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<List<_i8.QueuedOperation>> getHighPriorityQueuedOperations() =>
      (super.noSuchMethod(
            Invocation.method(#getHighPriorityQueuedOperations, []),
            returnValue: _i22.Future<List<_i8.QueuedOperation>>.value(
              <_i8.QueuedOperation>[],
            ),
          )
          as _i22.Future<List<_i8.QueuedOperation>>);

  @override
  _i22.Future<List<_i8.QueuedOperation>> getQueuedOperationsByPriority(
    int? priority,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getQueuedOperationsByPriority, [priority]),
            returnValue: _i22.Future<List<_i8.QueuedOperation>>.value(
              <_i8.QueuedOperation>[],
            ),
          )
          as _i22.Future<List<_i8.QueuedOperation>>);

  @override
  _i22.Future<void> clearOfflineQueue() =>
      (super.noSuchMethod(
            Invocation.method(#clearOfflineQueue, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> processOfflineQueue() =>
      (super.noSuchMethod(
            Invocation.method(#processOfflineQueue, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i9.RetryStatistics getRetryStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getRetryStatistics, []),
            returnValue: _FakeRetryStatistics_10(
              this,
              Invocation.method(#getRetryStatistics, []),
            ),
          )
          as _i9.RetryStatistics);

  @override
  void cancelRetryOperation(String? operationId) => super.noSuchMethod(
    Invocation.method(#cancelRetryOperation, [operationId]),
    returnValueForMissingStub: null,
  );

  @override
  _i22.Future<void> setBackgroundProcessingEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setBackgroundProcessingEnabled, [enabled]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> triggerBackgroundProcessing() =>
      (super.noSuchMethod(
            Invocation.method(#triggerBackgroundProcessing, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AISummarizationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAISummarizationService extends _i1.Mock
    implements _i40.AISummarizationService {
  MockAISummarizationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.ServiceCapabilities get capabilities =>
      (super.noSuchMethod(
            Invocation.getter(#capabilities),
            returnValue: _FakeServiceCapabilities_11(
              this,
              Invocation.getter(#capabilities),
            ),
          )
          as _i10.ServiceCapabilities);

  @override
  List<_i41.AIProvider> get availableProviders =>
      (super.noSuchMethod(
            Invocation.getter(#availableProviders),
            returnValue: <_i41.AIProvider>[],
          )
          as List<_i41.AIProvider>);

  @override
  _i22.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> configureProvider(_i41.AIProviderConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#configureProvider, [config]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<_i11.SummarizationResult> generateSummary({
    required String? transcriptionText,
    required _i42.SummarizationConfiguration? configuration,
    String? sessionId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateSummary, [], {
              #transcriptionText: transcriptionText,
              #configuration: configuration,
              #sessionId: sessionId,
            }),
            returnValue: _i22.Future<_i11.SummarizationResult>.value(
              _FakeSummarizationResult_12(
                this,
                Invocation.method(#generateSummary, [], {
                  #transcriptionText: transcriptionText,
                  #configuration: configuration,
                  #sessionId: sessionId,
                }),
              ),
            ),
          )
          as _i22.Future<_i11.SummarizationResult>);

  @override
  _i22.Stream<_i11.SummarizationResult> generateSummaryStream({
    required String? transcriptionText,
    required _i42.SummarizationConfiguration? configuration,
    String? sessionId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateSummaryStream, [], {
              #transcriptionText: transcriptionText,
              #configuration: configuration,
              #sessionId: sessionId,
            }),
            returnValue: _i22.Stream<_i11.SummarizationResult>.empty(),
          )
          as _i22.Stream<_i11.SummarizationResult>);

  @override
  _i22.Future<List<_i11.ActionItem>> extractActionItems({
    required String? text,
    String? context,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#extractActionItems, [], {
              #text: text,
              #context: context,
            }),
            returnValue: _i22.Future<List<_i11.ActionItem>>.value(
              <_i11.ActionItem>[],
            ),
          )
          as _i22.Future<List<_i11.ActionItem>>);

  @override
  _i22.Future<List<_i11.KeyDecision>> identifyKeyDecisions({
    required String? text,
    String? context,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#identifyKeyDecisions, [], {
              #text: text,
              #context: context,
            }),
            returnValue: _i22.Future<List<_i11.KeyDecision>>.value(
              <_i11.KeyDecision>[],
            ),
          )
          as _i22.Future<List<_i11.KeyDecision>>);

  @override
  _i22.Future<List<_i11.TopicExtract>> extractTopics({
    required String? text,
    int? maxTopics = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#extractTopics, [], {
              #text: text,
              #maxTopics: maxTopics,
            }),
            returnValue: _i22.Future<List<_i11.TopicExtract>>.value(
              <_i11.TopicExtract>[],
            ),
          )
          as _i22.Future<List<_i11.TopicExtract>>);

  @override
  _i22.Future<Map<String, _i11.SummarizationResult>> generateMultipleSummaries({
    required String? transcriptionText,
    required List<_i42.SummarizationConfiguration>? configurations,
    String? sessionId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateMultipleSummaries, [], {
              #transcriptionText: transcriptionText,
              #configurations: configurations,
              #sessionId: sessionId,
            }),
            returnValue:
                _i22.Future<Map<String, _i11.SummarizationResult>>.value(
                  <String, _i11.SummarizationResult>{},
                ),
          )
          as _i22.Future<Map<String, _i11.SummarizationResult>>);

  @override
  _i22.Future<_i10.ConfigurationValidationResult> validateConfiguration(
    _i42.SummarizationConfiguration? configuration,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#validateConfiguration, [configuration]),
            returnValue: _i22.Future<_i10.ConfigurationValidationResult>.value(
              _FakeConfigurationValidationResult_13(
                this,
                Invocation.method(#validateConfiguration, [configuration]),
              ),
            ),
          )
          as _i22.Future<_i10.ConfigurationValidationResult>);

  @override
  _i22.Future<bool> isReady() =>
      (super.noSuchMethod(
            Invocation.method(#isReady, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<_i10.ServiceHealthStatus> getHealthStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getHealthStatus, []),
            returnValue: _i22.Future<_i10.ServiceHealthStatus>.value(
              _FakeServiceHealthStatus_14(
                this,
                Invocation.method(#getHealthStatus, []),
              ),
            ),
          )
          as _i22.Future<_i10.ServiceHealthStatus>);

  @override
  bool isProviderAvailable(_i41.AIProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#isProviderAvailable, [provider]),
            returnValue: false,
          )
          as bool);

  @override
  _i10.ServiceCapabilities? getProviderCapabilities(
    _i41.AIProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getProviderCapabilities, [provider]),
          )
          as _i10.ServiceCapabilities?);
}

/// A class which mocks [AudioEnhancementService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioEnhancementService extends _i1.Mock
    implements _i43.AudioEnhancementService {
  MockAudioEnhancementService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.AudioEnhancementConfig get currentConfig =>
      (super.noSuchMethod(
            Invocation.getter(#currentConfig),
            returnValue: _FakeAudioEnhancementConfig_15(
              this,
              Invocation.getter(#currentConfig),
            ),
          )
          as _i12.AudioEnhancementConfig);

  @override
  _i12.ProcessingMode get processingMode =>
      (super.noSuchMethod(
            Invocation.getter(#processingMode),
            returnValue: _i12.ProcessingMode.realTime,
          )
          as _i12.ProcessingMode);

  @override
  _i22.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> configure(_i12.AudioEnhancementConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#configure, [config]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<_i12.AudioEnhancementResult> processAudio(
    _i44.Float32List? audioData,
    int? sampleRate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processAudio, [audioData, sampleRate]),
            returnValue: _i22.Future<_i12.AudioEnhancementResult>.value(
              _FakeAudioEnhancementResult_16(
                this,
                Invocation.method(#processAudio, [audioData, sampleRate]),
              ),
            ),
          )
          as _i22.Future<_i12.AudioEnhancementResult>);

  @override
  _i22.Stream<_i44.Float32List> processAudioStream(
    _i22.Stream<_i44.Float32List>? audioStream,
    int? sampleRate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processAudioStream, [audioStream, sampleRate]),
            returnValue: _i22.Stream<_i44.Float32List>.empty(),
          )
          as _i22.Stream<_i44.Float32List>);

  @override
  _i22.Future<void> estimateNoiseProfile(
    _i44.Float32List? audioData,
    int? sampleRate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#estimateNoiseProfile, [audioData, sampleRate]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<_i44.Float32List> applyNoiseReduction(
    _i44.Float32List? audioData,
    int? sampleRate,
    double? strength,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#applyNoiseReduction, [
              audioData,
              sampleRate,
              strength,
            ]),
            returnValue: _i22.Future<_i44.Float32List>.value(
              _i44.Float32List(0),
            ),
          )
          as _i22.Future<_i44.Float32List>);

  @override
  _i22.Future<_i44.Float32List> applyEchoCancellation(
    _i44.Float32List? audioData,
    int? sampleRate,
    double? strength,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#applyEchoCancellation, [
              audioData,
              sampleRate,
              strength,
            ]),
            returnValue: _i22.Future<_i44.Float32List>.value(
              _i44.Float32List(0),
            ),
          )
          as _i22.Future<_i44.Float32List>);

  @override
  _i22.Future<_i44.Float32List> applyAutoGainControl(
    _i44.Float32List? audioData,
    int? sampleRate,
    double? threshold,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#applyAutoGainControl, [
              audioData,
              sampleRate,
              threshold,
            ]),
            returnValue: _i22.Future<_i44.Float32List>.value(
              _i44.Float32List(0),
            ),
          )
          as _i22.Future<_i44.Float32List>);

  @override
  _i22.Future<_i44.Float32List> applySpectralSubtraction(
    _i44.Float32List? audioData,
    int? sampleRate,
    double? alpha,
    double? beta,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#applySpectralSubtraction, [
              audioData,
              sampleRate,
              alpha,
              beta,
            ]),
            returnValue: _i22.Future<_i44.Float32List>.value(
              _i44.Float32List(0),
            ),
          )
          as _i22.Future<_i44.Float32List>);

  @override
  _i22.Future<_i44.Float32List> applyFrequencyFiltering(
    _i44.Float32List? audioData,
    int? sampleRate,
    double? highPassCutoff,
    double? lowPassCutoff,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#applyFrequencyFiltering, [
              audioData,
              sampleRate,
              highPassCutoff,
              lowPassCutoff,
            ]),
            returnValue: _i22.Future<_i44.Float32List>.value(
              _i44.Float32List(0),
            ),
          )
          as _i22.Future<_i44.Float32List>);

  @override
  List<_i12.AudioEnhancementType> getSupportedEnhancements() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedEnhancements, []),
            returnValue: <_i12.AudioEnhancementType>[],
          )
          as List<_i12.AudioEnhancementType>);

  @override
  _i22.Future<bool> isReady() =>
      (super.noSuchMethod(
            Invocation.method(#isReady, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<void> setProcessingMode(_i12.ProcessingMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setProcessingMode, [mode]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  Map<String, dynamic> getPerformanceMetrics() =>
      (super.noSuchMethod(
            Invocation.method(#getPerformanceMetrics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i22.Future<void> resetToDefaults() =>
      (super.noSuchMethod(
            Invocation.method(#resetToDefaults, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);
}

/// A class which mocks [PermissionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionService extends _i1.Mock implements _i45.PermissionService {
  MockPermissionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Stream<Map<_i13.PermissionType, _i13.PermissionState>>
  get permissionStateStream =>
      (super.noSuchMethod(
            Invocation.getter(#permissionStateStream),
            returnValue:
                _i22.Stream<
                  Map<_i13.PermissionType, _i13.PermissionState>
                >.empty(),
          )
          as _i22.Stream<Map<_i13.PermissionType, _i13.PermissionState>>);

  @override
  _i22.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<_i13.PermissionState> checkPermission(
    _i13.PermissionType? type,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#checkPermission, [type]),
            returnValue: _i22.Future<_i13.PermissionState>.value(
              _i13.PermissionState.unknown,
            ),
          )
          as _i22.Future<_i13.PermissionState>);

  @override
  _i22.Future<Map<_i13.PermissionType, _i13.PermissionState>> checkPermissions(
    List<_i13.PermissionType>? types,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#checkPermissions, [types]),
            returnValue:
                _i22.Future<
                  Map<_i13.PermissionType, _i13.PermissionState>
                >.value(<_i13.PermissionType, _i13.PermissionState>{}),
          )
          as _i22.Future<Map<_i13.PermissionType, _i13.PermissionState>>);

  @override
  _i22.Future<_i13.PermissionResult> requestPermission(
    _i13.PermissionType? type, {
    _i13.PermissionConfig? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#requestPermission, [type], {#config: config}),
            returnValue: _i22.Future<_i13.PermissionResult>.value(
              _FakePermissionResult_17(
                this,
                Invocation.method(
                  #requestPermission,
                  [type],
                  {#config: config},
                ),
              ),
            ),
          )
          as _i22.Future<_i13.PermissionResult>);

  @override
  _i22.Future<Map<_i13.PermissionType, _i13.PermissionResult>>
  requestPermissions(
    List<_i13.PermissionType>? types, {
    _i13.PermissionConfig? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#requestPermissions, [types], {#config: config}),
            returnValue:
                _i22.Future<
                  Map<_i13.PermissionType, _i13.PermissionResult>
                >.value(<_i13.PermissionType, _i13.PermissionResult>{}),
          )
          as _i22.Future<Map<_i13.PermissionType, _i13.PermissionResult>>);

  @override
  _i22.Future<bool> openAppSettings() =>
      (super.noSuchMethod(
            Invocation.method(#openAppSettings, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> shouldShowRationale(_i13.PermissionType? type) =>
      (super.noSuchMethod(
            Invocation.method(#shouldShowRationale, [type]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  Map<String, dynamic> getPlatformPermissionInfo(_i13.PermissionType? type) =>
      (super.noSuchMethod(
            Invocation.method(#getPlatformPermissionInfo, [type]),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i22.Future<bool> hasRequiredPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#hasRequiredPermissions, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<List<_i13.PermissionType>> getMissingRequiredPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#getMissingRequiredPermissions, []),
            returnValue: _i22.Future<List<_i13.PermissionType>>.value(
              <_i13.PermissionType>[],
            ),
          )
          as _i22.Future<List<_i13.PermissionType>>);

  @override
  void resetPermissionTracking() => super.noSuchMethod(
    Invocation.method(#resetPermissionTracking, []),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> getPermissionAnalytics() =>
      (super.noSuchMethod(
            Invocation.method(#getPermissionAnalytics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [ExportService].
///
/// See the documentation for Mockito's code generation for more information.
class MockExportService extends _i1.Mock implements _i46.ExportService {
  MockExportService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i14.ExportResult> exportSingleFile(
    String? fileId,
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exportSingleFile, [fileId, options]),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(#exportSingleFile, [fileId, options]),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i14.ExportResult> exportMultipleFiles(
    List<String>? fileIds,
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exportMultipleFiles, [fileIds, options]),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(#exportMultipleFiles, [fileIds, options]),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i14.ExportResult> exportCategory(
    _i48.FileCategory? category,
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exportCategory, [category, options]),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(#exportCategory, [category, options]),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i14.ExportResult> exportSearchResults(
    _i18.SearchQuery? query,
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exportSearchResults, [query, options]),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(#exportSearchResults, [query, options]),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i14.ExportResult> exportDateRange(
    _i47.DateRange? dateRange,
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exportDateRange, [dateRange, options]),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(#exportDateRange, [dateRange, options]),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i14.ExportResult> exportByTags(
    List<String>? tags,
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exportByTags, [tags, options]),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(#exportByTags, [tags, options]),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i14.ExportResult> exportStorageStats(
    _i47.ExportOptions? options, {
    _i47.DateRange? dateRange,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #exportStorageStats,
              [options],
              {#dateRange: dateRange},
            ),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(
                  #exportStorageStats,
                  [options],
                  {#dateRange: dateRange},
                ),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i14.ExportResult> createSystemBackup(
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createSystemBackup, [options]),
            returnValue: _i22.Future<_i14.ExportResult>.value(
              _FakeExportResult_18(
                this,
                Invocation.method(#createSystemBackup, [options]),
              ),
            ),
          )
          as _i22.Future<_i14.ExportResult>);

  @override
  _i22.Future<_i15.ExportEstimate> estimateExportSize(
    List<String>? fileIds,
    _i47.ExportOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#estimateExportSize, [fileIds, options]),
            returnValue: _i22.Future<_i15.ExportEstimate>.value(
              _FakeExportEstimate_19(
                this,
                Invocation.method(#estimateExportSize, [fileIds, options]),
              ),
            ),
          )
          as _i22.Future<_i15.ExportEstimate>);

  @override
  _i22.Future<bool> cancelExport(String? exportId) =>
      (super.noSuchMethod(
            Invocation.method(#cancelExport, [exportId]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Stream<_i15.ExportProgress> getExportProgress(String? exportId) =>
      (super.noSuchMethod(
            Invocation.method(#getExportProgress, [exportId]),
            returnValue: _i22.Stream<_i15.ExportProgress>.empty(),
          )
          as _i22.Stream<_i15.ExportProgress>);

  @override
  List<_i49.ExportFormat> getSupportedFormats() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedFormats, []),
            returnValue: <_i49.ExportFormat>[],
          )
          as List<_i49.ExportFormat>);

  @override
  _i15.ValidationResult validateExportOptions(_i47.ExportOptions? options) =>
      (super.noSuchMethod(
            Invocation.method(#validateExportOptions, [options]),
            returnValue: _FakeValidationResult_20(
              this,
              Invocation.method(#validateExportOptions, [options]),
            ),
          )
          as _i15.ValidationResult);

  @override
  _i22.Future<void> cleanupTemporaryFiles() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupTemporaryFiles, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i50.ThemeService {
  MockThemeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.ThemeMode get themeMode =>
      (super.noSuchMethod(
            Invocation.getter(#themeMode),
            returnValue: _i16.ThemeMode.system,
          )
          as _i16.ThemeMode);

  @override
  bool get isHighContrastMode =>
      (super.noSuchMethod(
            Invocation.getter(#isHighContrastMode),
            returnValue: false,
          )
          as bool);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  _i16.ThemeData get lightTheme =>
      (super.noSuchMethod(
            Invocation.getter(#lightTheme),
            returnValue: _FakeThemeData_21(
              this,
              Invocation.getter(#lightTheme),
            ),
          )
          as _i16.ThemeData);

  @override
  _i16.ThemeData get darkTheme =>
      (super.noSuchMethod(
            Invocation.getter(#darkTheme),
            returnValue: _FakeThemeData_21(this, Invocation.getter(#darkTheme)),
          )
          as _i16.ThemeData);

  @override
  List<_i16.ThemeMode> get availableThemeModes =>
      (super.noSuchMethod(
            Invocation.getter(#availableThemeModes),
            returnValue: <_i16.ThemeMode>[],
          )
          as List<_i16.ThemeMode>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.ThemeData getCurrentTheme(_i51.Brightness? brightness) =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentTheme, [brightness]),
            returnValue: _FakeThemeData_21(
              this,
              Invocation.method(#getCurrentTheme, [brightness]),
            ),
          )
          as _i16.ThemeData);

  @override
  _i22.Future<void> setThemeMode(_i16.ThemeMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setThemeMode, [mode]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> toggleHighContrastMode() =>
      (super.noSuchMethod(
            Invocation.method(#toggleHighContrastMode, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> setHighContrastMode(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setHighContrastMode, [enabled]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  String getThemeModeDisplayName(_i16.ThemeMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#getThemeModeDisplayName, [mode]),
            returnValue: _i28.dummyValue<String>(
              this,
              Invocation.method(#getThemeModeDisplayName, [mode]),
            ),
          )
          as String);

  @override
  _i22.Future<void> resetToDefaults() =>
      (super.noSuchMethod(
            Invocation.method(#resetToDefaults, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i51.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i51.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AdvancedSearchService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdvancedSearchService extends _i1.Mock
    implements _i18.AdvancedSearchService {
  MockAdvancedSearchService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i18.SearchResult> search(_i18.SearchQuery? query) =>
      (super.noSuchMethod(
            Invocation.method(#search, [query]),
            returnValue: _i22.Future<_i18.SearchResult>.value(
              _FakeSearchResult_22(this, Invocation.method(#search, [query])),
            ),
          )
          as _i22.Future<_i18.SearchResult>);

  @override
  _i22.Future<List<String>> getSearchSuggestions({
    String? currentQuery,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSearchSuggestions, [], {
              #currentQuery: currentQuery,
              #limit: limit,
            }),
            returnValue: _i22.Future<List<String>>.value(<String>[]),
          )
          as _i22.Future<List<String>>);

  @override
  _i22.Future<_i18.SearchFacets> getSearchFacets([String? query]) =>
      (super.noSuchMethod(
            Invocation.method(#getSearchFacets, [query]),
            returnValue: _i22.Future<_i18.SearchFacets>.value(
              _FakeSearchFacets_23(
                this,
                Invocation.method(#getSearchFacets, [query]),
              ),
            ),
          )
          as _i22.Future<_i18.SearchFacets>);

  @override
  void saveSearch(String? name, _i18.SearchQuery? query) => super.noSuchMethod(
    Invocation.method(#saveSearch, [name, query]),
    returnValueForMissingStub: null,
  );

  @override
  _i18.SearchQuery? loadSavedSearch(String? name) =>
      (super.noSuchMethod(Invocation.method(#loadSavedSearch, [name]))
          as _i18.SearchQuery?);

  @override
  List<String> getSavedSearchNames() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearchNames, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  void deleteSavedSearch(String? name) => super.noSuchMethod(
    Invocation.method(#deleteSavedSearch, [name]),
    returnValueForMissingStub: null,
  );

  @override
  List<_i18.SearchQuery> getSearchHistory({int? limit = 20}) =>
      (super.noSuchMethod(
            Invocation.method(#getSearchHistory, [], {#limit: limit}),
            returnValue: <_i18.SearchQuery>[],
          )
          as List<_i18.SearchQuery>);

  @override
  void clearSearchHistory() => super.noSuchMethod(
    Invocation.method(#clearSearchHistory, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [BatchProcessingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBatchProcessingService extends _i1.Mock
    implements _i52.BatchProcessingService {
  MockBatchProcessingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i19.BatchResult> executeBatch(_i53.BatchConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#executeBatch, [config]),
            returnValue: _i22.Future<_i19.BatchResult>.value(
              _FakeBatchResult_24(
                this,
                Invocation.method(#executeBatch, [config]),
              ),
            ),
          )
          as _i22.Future<_i19.BatchResult>);

  @override
  _i22.Stream<_i54.BatchProgress> getBatchProgress(String? batchId) =>
      (super.noSuchMethod(
            Invocation.method(#getBatchProgress, [batchId]),
            returnValue: _i22.Stream<_i54.BatchProgress>.empty(),
          )
          as _i22.Stream<_i54.BatchProgress>);

  @override
  _i22.Future<bool> cancelBatch(String? batchId) =>
      (super.noSuchMethod(
            Invocation.method(#cancelBatch, [batchId]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  bool isBatchRunning(String? batchId) =>
      (super.noSuchMethod(
            Invocation.method(#isBatchRunning, [batchId]),
            returnValue: false,
          )
          as bool);

  @override
  List<String> getRunningBatches() =>
      (super.noSuchMethod(
            Invocation.method(#getRunningBatches, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<_i55.BatchOperation> getSupportedOperations() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedOperations, []),
            returnValue: <_i55.BatchOperation>[],
          )
          as List<_i55.BatchOperation>);

  @override
  _i22.Future<List<String>> validateBatchConfig(_i53.BatchConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#validateBatchConfig, [config]),
            returnValue: _i22.Future<List<String>>.value(<String>[]),
          )
          as _i22.Future<List<String>>);

  @override
  _i22.Future<List<_i20.FileOperationPreview>> previewBatch(
    _i53.BatchConfig? config,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#previewBatch, [config]),
            returnValue: _i22.Future<List<_i20.FileOperationPreview>>.value(
              <_i20.FileOperationPreview>[],
            ),
          )
          as _i22.Future<List<_i20.FileOperationPreview>>);

  @override
  _i22.Future<List<_i20.BatchHistoryEntry>> getBatchHistory({
    int? limit,
    _i55.BatchOperation? operation,
    DateTime? since,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBatchHistory, [], {
              #limit: limit,
              #operation: operation,
              #since: since,
            }),
            returnValue: _i22.Future<List<_i20.BatchHistoryEntry>>.value(
              <_i20.BatchHistoryEntry>[],
            ),
          )
          as _i22.Future<List<_i20.BatchHistoryEntry>>);

  @override
  _i22.Future<void> clearBatchHistory() =>
      (super.noSuchMethod(
            Invocation.method(#clearBatchHistory, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<Duration> estimateBatchDuration(_i53.BatchConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#estimateBatchDuration, [config]),
            returnValue: _i22.Future<Duration>.value(
              _FakeDuration_5(
                this,
                Invocation.method(#estimateBatchDuration, [config]),
              ),
            ),
          )
          as _i22.Future<Duration>);

  @override
  _i22.Future<_i20.BatchStatistics> getBatchStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getBatchStatistics, []),
            returnValue: _i22.Future<_i20.BatchStatistics>.value(
              _FakeBatchStatistics_25(
                this,
                Invocation.method(#getBatchStatistics, []),
              ),
            ),
          )
          as _i22.Future<_i20.BatchStatistics>);
}

/// A class which mocks [EnhancedNotificationsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnhancedNotificationsService extends _i1.Mock
    implements _i56.EnhancedNotificationsService {
  MockEnhancedNotificationsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAvailable =>
      (super.noSuchMethod(Invocation.getter(#isAvailable), returnValue: false)
          as bool);

  @override
  set onNotificationAction(
    void Function(_i56.NotificationActionType, Map<String, dynamic>?)?
    _onNotificationAction,
  ) => super.noSuchMethod(
    Invocation.setter(#onNotificationAction, _onNotificationAction),
    returnValueForMissingStub: null,
  );

  @override
  set onNotificationTapped(
    void Function(int, String?)? _onNotificationTapped,
  ) => super.noSuchMethod(
    Invocation.setter(#onNotificationTapped, _onNotificationTapped),
    returnValueForMissingStub: null,
  );

  @override
  _i22.Future<bool> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> requestPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#requestPermissions, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<void> showRecordingNotification({
    required bool? isRecording,
    Duration? duration,
    bool? isPaused = false,
    String? meetingTitle,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#showRecordingNotification, [], {
              #isRecording: isRecording,
              #duration: duration,
              #isPaused: isPaused,
              #meetingTitle: meetingTitle,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> showTranscriptionNotification({
    required bool? isTranscribing,
    double? progress = 0.0,
    String? status,
    String? fileName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#showTranscriptionNotification, [], {
              #isTranscribing: isTranscribing,
              #progress: progress,
              #status: status,
              #fileName: fileName,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> showSummaryNotification({
    required bool? isGenerating,
    String? summaryType,
    String? fileName,
    bool? completed = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#showSummaryNotification, [], {
              #isGenerating: isGenerating,
              #summaryType: summaryType,
              #fileName: fileName,
              #completed: completed,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> showErrorNotification({
    required String? title,
    required String? message,
    String? details,
    bool? canRetry = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#showErrorNotification, [], {
              #title: title,
              #message: message,
              #details: details,
              #canRetry: canRetry,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> showStatusNotification({
    required String? title,
    required String? message,
    _i56.NotificationPriority? priority = _i56.NotificationPriority.normal,
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#showStatusNotification, [], {
              #title: title,
              #message: message,
              #priority: priority,
              #data: data,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> cancelNotification(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#cancelNotification, [id]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> cancelAllNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAllNotifications, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SiriShortcutsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSiriShortcutsService extends _i1.Mock
    implements _i57.SiriShortcutsService {
  MockSiriShortcutsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAvailable =>
      (super.noSuchMethod(Invocation.getter(#isAvailable), returnValue: false)
          as bool);

  @override
  _i22.Future<bool> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> registerShortcuts() =>
      (super.noSuchMethod(
            Invocation.method(#registerShortcuts, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<void> handleShortcutExecution(
    String? shortcutIdentifier,
    Map<String, dynamic>? parameters,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#handleShortcutExecution, [
              shortcutIdentifier,
              parameters,
            ]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> updateShortcuts({
    bool? isRecording = false,
    bool? hasRecordings = false,
    bool? hasTranscriptions = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateShortcuts, [], {
              #isRecording: isRecording,
              #hasRecordings: hasRecordings,
              #hasTranscriptions: hasTranscriptions,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> requestSiriPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#requestSiriPermissions, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AndroidAutoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidAutoService extends _i1.Mock
    implements _i58.AndroidAutoService {
  MockAndroidAutoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAvailable =>
      (super.noSuchMethod(Invocation.getter(#isAvailable), returnValue: false)
          as bool);

  @override
  _i58.AndroidAutoState get autoState =>
      (super.noSuchMethod(
            Invocation.getter(#autoState),
            returnValue: _i58.AndroidAutoState.disconnected,
          )
          as _i58.AndroidAutoState);

  @override
  set onWidgetAction(
    void Function(_i58.WidgetAction, Map<String, dynamic>?)? _onWidgetAction,
  ) => super.noSuchMethod(
    Invocation.setter(#onWidgetAction, _onWidgetAction),
    returnValueForMissingStub: null,
  );

  @override
  set onAutoStateChanged(
    void Function(_i58.AndroidAutoState)? _onAutoStateChanged,
  ) => super.noSuchMethod(
    Invocation.setter(#onAutoStateChanged, _onAutoStateChanged),
    returnValueForMissingStub: null,
  );

  @override
  _i22.Future<bool> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<void> updateHomeWidgets({
    bool? isRecording = false,
    Duration? recordingDuration,
    bool? isTranscribing = false,
    double? transcriptionProgress = 0.0,
    int? recentRecordingsCount = 0,
    String? status,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateHomeWidgets, [], {
              #isRecording: isRecording,
              #recordingDuration: recordingDuration,
              #isTranscribing: isTranscribing,
              #transcriptionProgress: transcriptionProgress,
              #recentRecordingsCount: recentRecordingsCount,
              #status: status,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> configureRecordingWidget({
    required bool? isRecording,
    Duration? duration,
    bool? isPaused = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#configureRecordingWidget, [], {
              #isRecording: isRecording,
              #duration: duration,
              #isPaused: isPaused,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> configureTranscriptionWidget({
    required bool? isTranscribing,
    double? progress = 0.0,
    String? transcriptionStatus,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#configureTranscriptionWidget, [], {
              #isTranscribing: isTranscribing,
              #progress: progress,
              #transcriptionStatus: transcriptionStatus,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> handleVoiceCommand(
    String? command,
    Map<String, dynamic>? parameters,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#handleVoiceCommand, [command, parameters]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> updateAutoDisplay({
    String? title,
    String? subtitle,
    List<String>? actions,
    bool? isRecording = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateAutoDisplay, [], {
              #title: title,
              #subtitle: subtitle,
              #actions: actions,
              #isRecording: isRecording,
            }),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> setupWidgetConfiguration() =>
      (super.noSuchMethod(
            Invocation.method(#setupWidgetConfiguration, []),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<bool> checkWidgetPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#checkWidgetPermissions, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<bool> requestWidgetPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#requestWidgetPermissions, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  Map<String, dynamic> getWidgetPreviewData() =>
      (super.noSuchMethod(
            Invocation.method(#getWidgetPreviewData, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PerformanceOptimizationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformanceOptimizationService extends _i1.Mock
    implements _i59.PerformanceOptimizationService {
  MockPerformanceOptimizationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAvailable =>
      (super.noSuchMethod(Invocation.getter(#isAvailable), returnValue: false)
          as bool);

  @override
  _i59.OptimizationStrategy get currentStrategy =>
      (super.noSuchMethod(
            Invocation.getter(#currentStrategy),
            returnValue: _i59.OptimizationStrategy.batteryOptimized,
          )
          as _i59.OptimizationStrategy);

  @override
  _i59.BackgroundMode get backgroundMode =>
      (super.noSuchMethod(
            Invocation.getter(#backgroundMode),
            returnValue: _i59.BackgroundMode.full,
          )
          as _i59.BackgroundMode);

  @override
  _i59.MemoryStrategy get memoryStrategy =>
      (super.noSuchMethod(
            Invocation.getter(#memoryStrategy),
            returnValue: _i59.MemoryStrategy.aggressive,
          )
          as _i59.MemoryStrategy);

  @override
  set onPerformanceUpdate(
    void Function(_i59.PerformanceMetrics)? _onPerformanceUpdate,
  ) => super.noSuchMethod(
    Invocation.setter(#onPerformanceUpdate, _onPerformanceUpdate),
    returnValueForMissingStub: null,
  );

  @override
  set onStrategyChanged(
    void Function(_i59.OptimizationStrategy)? _onStrategyChanged,
  ) => super.noSuchMethod(
    Invocation.setter(#onStrategyChanged, _onStrategyChanged),
    returnValueForMissingStub: null,
  );

  @override
  set onPerformanceWarning(
    void Function(String, Map<String, dynamic>)? _onPerformanceWarning,
  ) => super.noSuchMethod(
    Invocation.setter(#onPerformanceWarning, _onPerformanceWarning),
    returnValueForMissingStub: null,
  );

  @override
  _i22.Future<bool> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  _i22.Future<void> setOptimizationStrategy(
    _i59.OptimizationStrategy? strategy,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setOptimizationStrategy, [strategy]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> setBackgroundMode(_i59.BackgroundMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setBackgroundMode, [mode]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<void> setMemoryStrategy(_i59.MemoryStrategy? strategy) =>
      (super.noSuchMethod(
            Invocation.method(#setMemoryStrategy, [strategy]),
            returnValue: _i22.Future<void>.value(),
            returnValueForMissingStub: _i22.Future<void>.value(),
          )
          as _i22.Future<void>);

  @override
  _i22.Future<_i59.PerformanceMetrics?> getCurrentMetrics() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentMetrics, []),
            returnValue: _i22.Future<_i59.PerformanceMetrics?>.value(),
          )
          as _i22.Future<_i59.PerformanceMetrics?>);

  @override
  Map<String, dynamic> generatePerformanceReport() =>
      (super.noSuchMethod(
            Invocation.method(#generatePerformanceReport, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
