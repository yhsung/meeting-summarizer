// Mocks generated by Mockito 5.4.6 from annotations
// in meeting_summarizer/test/core/services/calendar_services/google_calendar_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:googleapis_auth/auth_io.dart' as _i5;
import 'package:http/http.dart' as _i4;
import 'package:meeting_summarizer/core/enums/calendar_provider.dart' as _i3;
import 'package:meeting_summarizer/core/services/calendar_services/oauth2_auth_manager.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [OAuth2AuthManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockOAuth2AuthManager extends _i1.Mock implements _i2.OAuth2AuthManager {
  MockOAuth2AuthManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isAuthenticated(_i3.CalendarProvider? provider) => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [provider],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Client? getAuthenticatedClient(_i3.CalendarProvider? provider) =>
      (super.noSuchMethod(Invocation.method(
        #getAuthenticatedClient,
        [provider],
      )) as _i4.Client?);

  @override
  _i5.AccessCredentials? getCredentials(_i3.CalendarProvider? provider) =>
      (super.noSuchMethod(Invocation.method(
        #getCredentials,
        [provider],
      )) as _i5.AccessCredentials?);

  @override
  _i6.Future<bool> authenticateGoogle({
    required String? clientId,
    required String? clientSecret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticateGoogle,
          [],
          {
            #clientId: clientId,
            #clientSecret: clientSecret,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> authenticateOutlook({
    required String? clientId,
    required String? clientSecret,
    required String? tenantId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticateOutlook,
          [],
          {
            #clientId: clientId,
            #clientSecret: clientSecret,
            #tenantId: tenantId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> refreshToken(_i3.CalendarProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [provider],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> disconnect(_i3.CalendarProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [provider],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> disconnectAll() => (super.noSuchMethod(
        Invocation.method(
          #disconnectAll,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
