// Mocks generated by Mockito 5.4.6 from annotations
// in meeting_summarizer/test/core/services/privacy_control_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:meeting_summarizer/core/services/data_anonymization_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePrivacySettings_0 extends _i1.SmartFake
    implements _i2.PrivacySettings {
  _FakePrivacySettings_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAnonymizedData_1 extends _i1.SmartFake
    implements _i2.AnonymizedData {
  _FakeAnonymizedData_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDataExportResult_2 extends _i1.SmartFake
    implements _i2.DataExportResult {
  _FakeDataExportResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DataAnonymizationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataAnonymizationService extends _i1.Mock
    implements _i2.DataAnonymizationService {
  MockDataAnonymizationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get anonymousUserId =>
      (super.noSuchMethod(
            Invocation.getter(#anonymousUserId),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#anonymousUserId),
            ),
          )
          as String);

  @override
  _i2.PrivacySettings get privacySettings =>
      (super.noSuchMethod(
            Invocation.getter(#privacySettings),
            returnValue: _FakePrivacySettings_0(
              this,
              Invocation.getter(#privacySettings),
            ),
          )
          as _i2.PrivacySettings);

  @override
  _i4.Future<void> updatePrivacySettings(_i2.PrivacySettings? newSettings) =>
      (super.noSuchMethod(
            Invocation.method(#updatePrivacySettings, [newSettings]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setPrivacyControl(
    _i2.PrivacyControlType? control,
    bool? enabled,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setPrivacyControl, [control, enabled]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setDataRetentionPeriod(_i2.DataRetentionPeriod? period) =>
      (super.noSuchMethod(
            Invocation.method(#setDataRetentionPeriod, [period]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  String hashData(String? data, {String? salt}) =>
      (super.noSuchMethod(
            Invocation.method(#hashData, [data], {#salt: salt}),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.method(#hashData, [data], {#salt: salt}),
            ),
          )
          as String);

  @override
  _i2.AnonymizedData anonymizeData(
    Map<String, dynamic>? originalData, {
    List<String>? sensitiveFields,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #anonymizeData,
              [originalData],
              {#sensitiveFields: sensitiveFields},
            ),
            returnValue: _FakeAnonymizedData_1(
              this,
              Invocation.method(
                #anonymizeData,
                [originalData],
                {#sensitiveFields: sensitiveFields},
              ),
            ),
          )
          as _i2.AnonymizedData);

  @override
  _i2.AnonymizedData anonymizeForAnalytics(
    Map<String, dynamic>? analyticsData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#anonymizeForAnalytics, [analyticsData]),
            returnValue: _FakeAnonymizedData_1(
              this,
              Invocation.method(#anonymizeForAnalytics, [analyticsData]),
            ),
          )
          as _i2.AnonymizedData);

  @override
  _i4.Future<_i2.DataExportResult> exportUserData(
    _i2.DataExportRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exportUserData, [request]),
            returnValue: _i4.Future<_i2.DataExportResult>.value(
              _FakeDataExportResult_2(
                this,
                Invocation.method(#exportUserData, [request]),
              ),
            ),
          )
          as _i4.Future<_i2.DataExportResult>);

  @override
  _i4.Future<bool> deleteAllUserData() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAllUserData, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> secureDataWipe() =>
      (super.noSuchMethod(
            Invocation.method(#secureDataWipe, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  bool checkPrivacyCompliance() =>
      (super.noSuchMethod(
            Invocation.method(#checkPrivacyCompliance, []),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Future<void> storeAnonymizedData(_i2.AnonymizedData? data) =>
      (super.noSuchMethod(
            Invocation.method(#storeAnonymizedData, [data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
